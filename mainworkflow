name: Main API Workflow

on:
  workflow_dispatch:

jobs:
  # First Job - FT_API (Functional Testing)
  FT_API:
    name: FT API Rest Test
    runs-on: FunctionalAPIRunner
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Boto3
        run: |
          pip install boto3

      - name: Checkout code to download scripts
        uses: actions/checkout@v2

      # Check if any service is running in ECS cluster
      - name: Run ECS Check
        run: |
          pwd
          ls -la
          python check_ecs.py --cluster_name a209045-idt-osqa-us-east-1-dev-ecs-service-github-runner

      # Scale the Service with a count of 5
      - name: Run ECS Service Scaling
        run: |
          python scale_ecs_service.py --cluster_name a209045-idt-osqa-us-east-1-dev-ecs-service-github-runner --service_name a209045-idt-osqa-us-east-1-dev-ecs-service-github-runner-RESTTests --desired_count 5

      # Run parallel tests as part of the matrix strategy
      - name: Parallel Test Execution
        runs-on: FunctionalAPIRunner
        strategy:
          matrix:
            scriptfolder: [Rest_Add_Edit_Admin_Options, Rest_Add_Edit_Company_Groups_Eumoss, Rest_AddEditCopyGetDeleteCustomAuthority, Rest_AddEditGetDeleteCompanyVCTConfiguration]
        steps:
          - name: Check out
            uses: actions/checkout@v3

          - name: Setup Java
            uses: actions/setup-java@v3
            with:
              java-version: '8'
              distribution: 'corretto'
              cache: 'maven'

          - name: Run Tests
            run: |
              echo "Current working directory:"
              pwd
              cd ${{ matrix.scriptfolder }}
              pwd
              sleep 60

  # Second Job - PT_API (Performance Testing)
  PT_API:
    name: PT API Final
    runs-on: FunctionalAPIRunner
    needs: FT_API  # Depends on FT_API to complete first
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Boto3
        run: |
          pip install boto3

      - name: Checkout code to download scripts
        uses: actions/checkout@v2

      # Check If Any service is running in ECS cluster
      - name: Run ECS Check
        run: |
          pwd
          ls -la
          python check_ecs.py --cluster_name TRPerformanceAPI

      # Scale the Service for PT_API
      - name: Run ECS Service Scaling
        run: |
          python scale_ecs_service.py --cluster_name TRPerformanceAPI --service_name PT_API --desired_count 1

      - name: Run JMeter Tests
        run: |
          jmeter -n -t ./SampleAPI.jmx -Jpath=api/users?page=1 -Jduration=110 -Jusers=10 -Jrampup=10 -l ./SampleAPIjtl.jtl

      - name: Upload Results
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-results
          path: SampleAPIjtl.jtl
          if-no-files-found: error

      - name: Generate and Upload HTML Report
        run: |
          jmeter -g ./SampleAPIjtl.jtl -o ./html_report
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-reports
          path: html_report
          if-no-files-found: error

  # Stop Service (Optional) - Runs after PT_API completes
  stop-service:
    runs-on: ubuntu-latest
    needs: PT_API
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Boto3
        run: |
          pip install boto3

      - name: Checkout code to download scripts
        uses: actions/checkout@v2

      - name: Scale Down Service
        run: |
          python scale_ecs_service.py --cluster_name TRPerformanceAPI --service_name PT_API --desired_count 0
